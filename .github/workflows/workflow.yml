name: CI/CD Workflow

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read 

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

#      - name: Set up Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: 20
#
#      - name: Install dependencies
#        run: npm install

      # - name: Build Docker image
      #   run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::504374610848:role/my-github-actions-role
          aws-region: eu-central-1
          audience: sts.amazonaws.com
      
      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: hablsoft
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      # - name: Login to Docker Hub
      #   run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin

      # - name: Push image to Docker Hub
      #   run: docker push ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest

      # - name: âœ… Image pushed to Docker
      #   run: echo "Image pushed to Docker Hub!"

      # - name: Deploy to EC2 via SSH
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       docker pull ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest
      #       docker stop myapp || true && docker rm myapp || true
      #       docker run -d --name myapp -p 80:3000 ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest

      - name: ðŸŽ‰ Done
        run: echo "Workflow is done"
